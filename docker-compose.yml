# Development:
# COMPOSE_PROJECT_NAME=instance_name_dev COMPOSE_PROFILES=development ENVIRONMENT=development PORT=8090 DB=5431 docker-compose up --build --force-recreate

# Test:
# COMPOSE_PROJECT_NAME=instance_name_test COMPOSE_PROFILES=test ENVIRONMENT=test PORT=8090 DB=5431 docker-compose up --build --force-recreate

# Production:
# COMPOSE_PROJECT_NAME=instance_name_prod COMPOSE_PROFILES=production ENVIRONMENT=production PORT=8090 DB=5431 docker-compose up --build --force-recreate

version: '3'

services:
  web:
    image: nginx:alpine
    restart: always
    ports:
      - "${PORT}:80"
    volumes:
      - .:/app
      - ./docker/${ENVIRONMENT}/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./log/nginx:/var/log/nginx
    links:
      - php
  
  cron:
    build:
      context: .
      dockerfile: ./docker/${ENVIRONMENT}/cron/Dockerfile
      args:
        PHP_ENV: ${ENVIRONMENT}
    environment:
      - TITAN_DB_PASSWORD
      - TITAN_SCHEDULE_HASH
    volumes:
      - .:/app
      - /app/vendor
    links:
      - db
  
  php:
    build:
      context: .
      dockerfile: ./docker/${ENVIRONMENT}/php/Dockerfile
      args:
        PHP_ENV: ${ENVIRONMENT}
    environment:
      - TITAN_SESSION_NAME
      - TITAN_DB_PASSWORD
      - TITAN_SECURITY_HASH
      - TITAN_SEARCH_HASH
      - TITAN_SCHEDULE_HASH
    volumes:
      - .:/app
      - /app/vendor
      - ./log/mail:/var/log/maillog
    links:
      - db
  
  db:
    image: postgres:alpine
    restart: always
    ports:
      - "${DB}:5432"
    environment:
      POSTGRES_DB: instance
      POSTGRES_USER: titan
      POSTGRES_PASSWORD: ${TITAN_DB_PASSWORD}
    volumes:
      - ./update/db:/docker-entrypoint-initdb.d
  
  backup:
    image: postgres:alpine
    volumes:
      - ./db/backup:/backup
    command: |
      sh -c "PGPASSWORD=${TITAN_DB_PASSWORD} pg_dump -h db -U titan -Fp -O -x instance > /backup/${ENVIRONMENT}_$$(date +'%y-%m-%d_%H-%M-%S').sql"
    links:
      - db
    profiles:
      - tools
  
  mail:
    image: mailhog/mailhog
    restart: always
    user: root
    expose:
      - 1025
      - 8025
    ports:
      - 1025:1025
      - 8025:8025
    profiles:
      - development
